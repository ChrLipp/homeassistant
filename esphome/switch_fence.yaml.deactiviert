# Upgrade Shelly:
# - Reset shelly (press button for 10 seconds within the first minute after boot until LED flashes fast)
# - Connect your mobile to the shelly WLAN and navigate to 192.168.33.1. Enter WLAN credentials
# - Find IP in router and navigate to http://SHELLY_IP_ADDRESS/ota?url=http://dl.dasker.eu/firmware/mg2tasmota-Shelly25.zip
# - Flash minimal SW from http://ota.tasmota.com/tasmota/release/, eg. http://ota.tasmota.com/tasmota/release/tasmota-minimal.bin
# - Compile ESPhome and flash it
#
# Links:
# - OTA and first (non working) config from https://savjee.be/2020/09/shelly-2.5-flash-esphome-over-the-air/


substitutions:
  device_name: switch-fence
  device_description: Schalter Tor Abfahrt
  friendly_name: Switch Fence
  short_name: fence
  ip_adress: 10.0.0.215
  channel_1: Left
  channel_2: Right
  max_power: "2000.0" # watt
  max_temp: "80.0" # °C

esphome:
  name: ${device_name}
  comment: ${device_description}
  platform: ESP8266
  board: esp01_1m

# Network settings
packages:
  wifi: !include .network.yaml

i2c:
  sda: GPIO12
  scl: GPIO14

sensor:
  - platform: ade7953
    voltage:
      name: ${device_name} voltage
    current_a:
      name: ${channel_2} current
      internal: true
    current_b:
      name: ${channel_1} current
      internal: true
    active_power_a:
      name: ${channel_2} power
      id: power_channel_2
      filters:
        - multiply: 1
      on_value_range:
        - above: ${max_power}
          then:
            - switch.turn_off: switch2
            - homeassistant.service:
                service: persistent_notification.create
                data:
                  title: Message from ${device_name}
                data_template:
                  message: Switch turned off because power exceeded ${max_power}W
    active_power_b:
      name: ${channel_1} power
      id: power_channel_1
      filters:
        - multiply: -1
      on_value_range:
        - above: ${max_power}
          then:
            - switch.turn_off: switch1
            - homeassistant.service:
                service: persistent_notification.create
                data:
                  title: Message from ${device_name}
                data_template:
                  message: Switch turned off because power exceeded ${max_power}W
    update_interval: 30s

  # NTC Temperature
  - platform: ntc
    sensor: temp_resistance_reading
    name: ${device_name} temperature
    unit_of_measurement: "°C"
    accuracy_decimals: 1
    icon: "mdi:thermometer"
    calibration:
      b_constant: 3350
      reference_resistance: 10kOhm
      reference_temperature: 298.15K
    on_value_range:
      - above: ${max_temp}
        then:
          - switch.turn_off: switch1
          - switch.turn_off: switch2
          - homeassistant.service:
              service: persistent_notification.create
              data:
                title: Message from ${device_name}
              data_template:
                message: Switch turned off because temperature exceeded ${max_temp}°C
  - platform: resistance
    id: temp_resistance_reading
    sensor: temp_analog_reading
    configuration: DOWNSTREAM
    resistor: 32kOhm
  - platform: adc
    id: temp_analog_reading
    pin: A0

status_led:
  pin:
    number: GPIO0
    inverted: yes

output:
  - platform: gpio
    pin: GPIO4
    id: shelly_relay_1
  - platform: gpio
    pin: GPIO15
    id: shelly_relay_2

switch:
  - platform: output
    name: "${channel_1}"
    output: shelly_relay_1
    id: switch1
  - platform: output
    name: "${channel_2}"
    output: shelly_relay_2
    id: switch2

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO13
    name: "${channel_1} input"
    internal: true
    on_state:
      then:
        - switch.toggle: switch1
  - platform: gpio
    pin:
      number: GPIO5
    name: "${channel_2} input"
    internal: true
    on_state:
      then:
        - switch.toggle: switch2

  # Prevent short circuit with "floating" pin!
  - platform: gpio
    pin: GPIO16
    name: "ade7953 IRQ pin"
    internal: true
